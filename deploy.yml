name: Deploy to Pages with cache-busting

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Compute build id (short commit hash)
        id: meta
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Inject ?v=<build> into asset URLs
        run: |
          B="${{ steps.meta.outputs.SHORT_SHA }}"

          # 1) если в index.html уже есть ?v=... (включая {{ site.time }}), заменим на хэш
          sed -i -E "s/(splash\.js)\?v=[^\"']+/\1?v=$B/g" index.html || true
          sed -i -E "s/(player-core\.bundle\.v3\.3\.js)\?v=[^\"']+/\1?v=$B/g" index.html || true
          sed -i -E "s/(splash\.css)\?v=[^\"']+/\1?v=$B/g" index.html || true

          # 2) если ?v= не было вовсе — добавим
          sed -i -E "s/(splash\.js)([\"'])/\1?v=$B\2/g" index.html
          sed -i -E "s/(player-core\.bundle\.v3\.3\.js)([\"'])/\1?v=$B\2/g" index.html
          sed -i -E "s/(splash\.css)([\"'])/\1?v=$B\2/g" index.html

          # (необязательно, но полезно) обновим версию кэша в sw.js, если есть такая константа
          if grep -q "CACHE_VERSION" sw.js; then
            sed -i -E "s/(CACHE_VERSION\s*=\s*')[^']+(')/\1$B\2/" sw.js
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

